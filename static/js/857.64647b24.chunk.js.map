{"version":3,"file":"static/js/857.64647b24.chunk.js","mappings":"yRACaA,E,QAAWC,GAAAA,GAAH,2K,SCMN,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAeF,EAAaG,IAAI,SAItCC,QAAQC,IAAI,sBAAuBR,IAEnCS,EAAAA,EAAAA,YAAU,WACHJ,GAIHE,QAAQC,IAAI,0BACZE,EAAcL,GAAcM,KAAKZ,IAJjCQ,QAAQC,IAAI,yBAMb,CAACH,IAuBJ,IAAMK,EAAa,mCAAG,WAAME,GAAN,uFAIGC,IAAAA,IAAA,0DAC8BD,EAD9B,8CAJH,cAIdE,EAJc,yBAUbA,EAASC,KAAKC,SAVD,2CAAH,sDA8CnB,OACE,4BACE,wCAEA,kBAAMC,SAjCO,SAAAC,GACfA,EAAIC,iBACJ,IAAMC,EAAIF,EAAIG,cAAcC,SAASC,WAAWC,MAChDjB,QAAQC,IAAI,eAAgBY,GAGX,KAAbA,EAAEK,QAKNlB,QAAQC,IAAI,uBAAwBY,GAIpChB,EAAgB,CAAEQ,MAAOQ,KAPvBb,QAAQC,IAAI,8BAyBZ,WACE,kBACEkB,KAAK,OACLC,KAAK,aAGLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,mBAAQJ,KAAK,SAAb,uBAGD5B,IACC,+BACE,wBACGA,EAAOiC,KAAI,SAAAC,GACV,OACE,SAACtC,EAAD,WACE,SAAC,KAAD,CAAMuC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMpC,GAAxC,SACGgC,EAAMK,SAFIL,EAAME","sources":["views/MoviesPage/MoviesPage.styled.jsx","views/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const ListItem = styled.li`\n  margin-bottom: 4px;\n  :hover,\n  :focus {\n    color: var(--accent-color);\n  }\n\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n`;\n","// import { useEffect, useState } from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { ListItem } from './MoviesPage.styled';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState(null);\n  // const [inputValue, setInputValue] = useState('');\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currentQuery = searchParams.get('query');\n\n  // console.log('searchParams.get(\"query\"):', searchParams.get('query'));\n\n  console.log('location MoviesPage', location);\n\n  useEffect(() => {\n    if (!currentQuery) {\n      console.log('=== No currentQuery');\n      // setSearchParams({ query: 123321 });\n    } else {\n      console.log('=== Exist currentQuery');\n      getMoviesById(currentQuery).then(setMovies);\n    }\n  }, [currentQuery]);\n\n  /*\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n  const API_KEY = 'a3ec7c1621ade0b1491e66cd43b88745';\n\n  const getApiData = query => {\n    // showSpiner();\n    // let langs = getFromLocalStorage('lang');\n    return axios\n      .get(\n        `${query}&api_key=${API_KEY}&append_to_response=videos&language=${langs}`\n      )\n      .then(response => {\n        return response.data;\n      })\n      .catch(onFetchError);\n    // .finally(hideSpiner);\n\n    // https://api.themoviedb.org/3/trending/movie/week?api_key=a3ec7c1621ade0b1491e66cd43b88745\n  };\n*/\n\n  const getMoviesById = async query => {\n    // console.log('fetch start');\n\n    // console.log('query is: ', query);\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=a3ec7c1621ade0b1491e66cd43b88745`\n    );\n    // return response.data.results;\n    // console.log('fetch end');\n\n    return response.data.results;\n  };\n\n  // const onChange = evt => {\n  //   setInputValue(evt.target.value.toLowerCase());\n  // };\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n    const q = evt.currentTarget.elements.inputValue.value;\n    console.log('onSubmit  = ', q);\n\n    // for empty query\n    if (q.trim() === '') {\n      // toast.warn('Please, enter your query');\n      console.log('Pls, enter correct query!');\n      return;\n    }\n    console.log('I had correct query:', q);\n\n    // save inputValue in URL\n    // setSearchParams({ query: inputValue });\n    setSearchParams({ query: q });\n\n    // getMoviesById(inputValue).then(setMovies);\n    // reset Form\n    // setInputValue('');\n  };\n\n  // useEffect(() => {\n  //   console.log('useEffect detected!!! getMoviesById start');\n  //   getMoviesById().then(setMovies);\n  //   console.log('useEffect detected!!! getMoviesById end');\n  // }, []);\n  // console.log('movies:', movies);\n\n  return (\n    <div>\n      <h1>MoviesPage</h1>\n\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          name=\"inputValue\"\n          // value={inputValue}\n          // onChange={onChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {movies && (\n        <>\n          <ul>\n            {movies.map(movie => {\n              return (\n                <ListItem key={movie.id}>\n                  <Link to={`${movie.id}`} state={{ from: location }}>\n                    {movie.title}\n                  </Link>\n                </ListItem>\n              );\n            })}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n}\n"],"names":["ListItem","styled","MoviesPage","useState","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","currentQuery","get","console","log","useEffect","getMoviesById","then","query","axios","response","data","results","onSubmit","evt","preventDefault","q","currentTarget","elements","inputValue","value","trim","type","name","autoComplete","autoFocus","placeholder","map","movie","to","id","state","from","title"],"sourceRoot":""}