{"version":3,"file":"static/js/857.f6cc27c0.chunk.js","mappings":"4PACaA,E,QAAWC,GAAAA,GAAH,2K,SCUN,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAeF,EAAaG,IAAI,UAMtCC,EAAAA,EAAAA,YAAU,WACHF,GAKHG,QAAQC,IACN,0BACAJ,EACA,uBAGFK,EAAAA,EAAAA,IAAgBL,GACbM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAC1BF,KAAKZ,IAXRS,QAAQC,IAAI,2CAab,CAACJ,KAEJE,EAAAA,EAAAA,YAAU,WACJT,GAA4B,IAAlBA,EAAOgB,QACnBC,EAAAA,GAAAA,KAAW,wBAEZ,CAACjB,IA4FJ,OAFAU,QAAQC,IAAI,2BAA4BX,IAGtC,4BAGE,kBAAMkB,SAlCO,SAAAC,GACfA,EAAIC,iBACJ,IAAMC,EAAIF,EAAIG,cAAcC,SAASC,WAAWC,MAIhD,GAHAf,QAAQC,IAAI,eAAgBU,GAGX,KAAbA,EAAEK,OAGJ,OAFAT,EAAAA,GAAAA,KAAW,iCACXP,QAAQC,IAAI,6BAGdD,QAAQC,IAAI,uBAAwBU,GAIpCf,EAAgB,CAAEqB,MAAON,KAmBvB,WACE,kBACEO,KAAK,OACLC,KAAK,aAGLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,mBAAQJ,KAAK,SAAb,uBAGD5B,IACC,gCACGA,EAAOgB,OAAS,IACf,wBACGhB,EAAOiC,KAAI,SAAAC,GACV,OACE,SAACtC,EAAD,WACE,SAAC,KAAD,CAAMuC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMpC,GAAxC,SACGgC,EAAMK,SAFIL,EAAME,SASV,IAAlBpC,EAAOgB,SAAgB","sources":["views/MoviesPage/MoviesPage.styled.jsx","views/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const ListItem = styled.li`\n  margin-bottom: 4px;\n  :hover,\n  :focus {\n    color: var(--accent-color);\n  }\n\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n`;\n","// import { useEffect, useState } from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n// import axios from 'axios';\nimport { toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\nimport { getMoviesByName } from '../../service/apiService';\n\nimport { ListItem } from './MoviesPage.styled';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState(null);\n  // const [inputValue, setInputValue] = useState('');\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currentQuery = searchParams.get('query');\n\n  // console.log('searchParams.get(\"query\"):', searchParams.get('query'));\n\n  // console.log('location MoviesPage', location);\n\n  useEffect(() => {\n    if (!currentQuery) {\n      // ==== NOTIFY ====\n      console.log('=== No currentQuery, nothing to fetch');\n      // toast.warn('Wow so easy !');\n    } else {\n      console.log(\n        '=== Exist currentQuery:',\n        currentQuery,\n        ', lets fetch movie'\n      );\n      // fetch\n      getMoviesByName(currentQuery)\n        .then(response => response.results)\n        .then(setMovies);\n    }\n  }, [currentQuery]);\n\n  useEffect(() => {\n    if (movies && movies.length === 0) {\n      toast.warn('Nothing was found!');\n    }\n  }, [movies]);\n\n  /*\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n  const API_KEY = 'a3ec7c1621ade0b1491e66cd43b88745';\n\n  const getApiData = query => {\n    // showSpiner();\n    // let langs = getFromLocalStorage('lang');\n    return axios\n      .get(\n        `${query}&api_key=${API_KEY}&append_to_response=videos&language=${langs}`\n      )\n      .then(response => {\n        return response.data;\n      })\n      .catch(onFetchError);\n    // .finally(hideSpiner);\n\n    // https://api.themoviedb.org/3/trending/movie/week?api_key=a3ec7c1621ade0b1491e66cd43b88745\n  };\n*/\n  /*\n  // ============== рабочий запрос =======================\n  const getMoviesByName = async query => {\n    // console.log('fetch start');\n\n    // console.log('query is: ', query);\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=a3ec7c1621ade0b1491e66cd43b88745`\n    );\n    // console.log('fetch end');\n\n    return response.data.results;\n  };\n  // =====================================\n*/\n\n  /*\n  // локально работает\n  const getMoviesByName = async query => {\n    // console.log('fetch start');\n    // console.log('query is: ', query);\n    const API_KEY = 'a3ec7c1621ade0b1491e66cd43b88745';\n    const BaseURL = 'https://api.themoviedb.org/3/';\n\n    try {\n      const response = await axios.get(\n        `${BaseURL}search/movie?query=${query}&api_key=${API_KEY}`\n      );\n      // console.log('fetch end');\n      return response.data;\n    } catch (error) {\n      // return Promise.reject(new Error(error.message));\n      console.error('Error!!! Something went wrong:', error.message);\n      // console.error(error);\n    } finally {\n      console.log('finally fetch end');\n    }\n  };\n*/\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n    const q = evt.currentTarget.elements.inputValue.value;\n    console.log('onSubmit  = ', q);\n\n    // for empty query\n    if (q.trim() === '') {\n      toast.warn('Please, enter your query');\n      console.log('Pls, enter correct query!');\n      return;\n    }\n    console.log('I had correct query:', q);\n\n    // save inputValue in URL\n    // setSearchParams({ query: inputValue });\n    setSearchParams({ query: q });\n\n    // getMoviesById(inputValue).then(setMovies);\n    // reset Form\n    // setInputValue('');\n  };\n\n  // useEffect(() => {\n  //   console.log('useEffect detected!!! getMoviesById start');\n  //   getMoviesById().then(setMovies);\n  //   console.log('useEffect detected!!! getMoviesById end');\n  // }, []);\n\n  console.log('Movies Array from State:', movies);\n\n  return (\n    <div>\n      {/* <h1>MoviesPage</h1> */}\n\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          name=\"inputValue\"\n          // value={inputValue}\n          // onChange={onChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {movies && (\n        <>\n          {movies.length > 0 && (\n            <ul>\n              {movies.map(movie => {\n                return (\n                  <ListItem key={movie.id}>\n                    <Link to={`${movie.id}`} state={{ from: location }}>\n                      {movie.title}\n                    </Link>\n                  </ListItem>\n                );\n              })}\n            </ul>\n          )}\n          {movies.length === 0 && <p>Nothing was found</p>}\n        </>\n      )}\n    </div>\n  );\n}\n"],"names":["ListItem","styled","MoviesPage","useState","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","currentQuery","get","useEffect","console","log","getMoviesByName","then","response","results","length","toast","onSubmit","evt","preventDefault","q","currentTarget","elements","inputValue","value","trim","query","type","name","autoComplete","autoFocus","placeholder","map","movie","to","id","state","from","title"],"sourceRoot":""}