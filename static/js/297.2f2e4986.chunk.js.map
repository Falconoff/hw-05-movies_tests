{"version":3,"file":"static/js/297.2f2e4986.chunk.js","mappings":"+SAGaA,EAAeC,EAAAA,GAAAA,IAAH,8CAIZC,GAAYD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,wOAcTG,EAAeH,EAAAA,GAAAA,IAAH,mhBA2BZI,EAAaJ,EAAAA,GAAAA,EAAH,yFAMVK,EAAaL,EAAAA,GAAAA,EAAH,qHAOVM,EAAqBN,EAAAA,GAAAA,IAAH,gSAkBlBO,GAAWP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,oJ,SC/DN,SAASS,IAAoB,IAAD,YACjCC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAGMC,EAAa,mCAAG,WAAML,GAAN,uFACGM,IAAAA,IAAA,6CACiBN,EADjB,8CADH,cACdO,EADc,yBAIbA,EAASC,MAJI,2CAAH,sDAObC,GAAWC,EAAAA,EAAAA,MAgBjB,OAdAC,QAAQC,IAAI,6BAA8BH,IAS1CI,EAAAA,EAAAA,YAAU,WACRR,EAAcL,GAASc,KAAKV,KAE3B,CAACJ,KAGF,UAACX,EAAD,YACE,2CAIA,SAACE,EAAD,CAAWwB,GAAE,iBAAEN,QAAF,IAAEA,GAAF,UAAEA,EAAUO,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAAxC,qBAECd,IACC,UAACV,EAAD,YACE,gBACEyB,IAAG,0CAAqCf,EAAMgB,aAC9CC,IAAKjB,EAAMkB,SAEb,4BACE,SAAC3B,EAAD,UAAaS,EAAMkB,SACnB,wCAAqC,GAArBlB,EAAMmB,aAAtB,QAEA,SAAC3B,EAAD,wBACA,uBAAIQ,EAAMoB,YAEV,SAAC5B,EAAD,sBACA,uBACGQ,EAAMqB,OAAOC,KAAI,SAAAC,GAAK,OACrB,4BAAsBA,EAAMC,KAA5B,MAAWD,EAAME,UAIrB,SAACjC,EAAD,4BACA,uBAAIQ,EAAM0B,sBAKhB,UAACjC,EAAD,YACE,mDACA,2BACE,yBAEE,SAACC,EAAD,CAAUkB,GAAG,OAAOC,MAAO,CAAEC,KAAI,iBAAER,QAAF,IAAEA,GAAF,UAAEA,EAAUO,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAA5D,qBAIF,yBACE,SAACpB,EAAD,CACEkB,GAAG,UACHC,MAAO,CAAEC,KAAI,iBAAER,QAAF,IAAEA,GAAF,UAAEA,EAAUO,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAF1C,8BAUN,SAAC,KAAD","sources":["views/MovieDetailsPage/MovieDetailsPage.styled.jsx","views/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const MovieWrapper = styled.div`\n  /* color: blue; */\n`;\n\nexport const GoBackBtn = styled(Link)`\n  display: inline-block;\n  padding: 5px 10px;\n  border: 1px solid #555;\n  border-radius: 5px;\n  text-decoration: none;\n  font-weight: 500;\n\n  :hover,\n  :focus {\n    color: var(--accent-color);\n  }\n`;\n\nexport const MovieDetails = styled.div`\n  display: flex;\n  /* padding: 20px 0px; */\n  padding-top: 20px;\n  padding-bottom: 20px;\n  border-bottom: 1px solid #555;\n\n  img {\n    width: 250px;\n    height: auto;\n    margin-right: 20px;\n  }\n\n  span {\n    display: inline-block;\n    padding-right: 8px;\n    /* margin-bottom: 20px; */\n    /* border-right: 2px solid var(--accent-color); */\n    :not(:first-child) {\n      padding-left: 8px;\n    }\n    :not(:last-child) {\n      border-right: 1px solid var(--accent-color);\n    }\n  }\n`;\n\nexport const MovieTitle = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: 20px;\n`;\n\nexport const DetailName = styled.p`\n  /* font-size: 16px;  */\n  margin-bottom: 10px;\n  margin-top: 20px;\n  font-weight: 700;\n`;\n\nexport const AdditionalInfoList = styled.div`\n  /* padding: 0px 0px; */\n  margin-top: 10px;\n  border-bottom: 1px solid #555;\n\n  ul {\n    padding-left: 20px;\n  }\n\n  li:not(:last-child) {\n    margin-bottom: 8px;\n  }\n  a:hover {\n    /* text-decoration: none; */\n    color: var(--accent-color);\n  }\n`;\n\nexport const LinkItem = styled(NavLink)`\n  font-size: 18px;\n  color: #555;\n  font-weight: 500;\n  text-decoration: none;\n\n  &.active {\n    color: tomato;\n  }\n`;\n","// import { Outlet, useParams, Link } from 'react-router-dom';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport {\n  MovieWrapper,\n  MovieDetails,\n  MovieTitle,\n  DetailName,\n  AdditionalInfoList,\n  LinkItem,\n  GoBackBtn,\n} from './MovieDetailsPage.styled';\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  // console.log('params - movieId:', movieId);\n  const [movie, setMovie] = useState(null);\n  // const [conf, setConf] = useState(null);\n\n  const getMoviesById = async movieId => {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=a3ec7c1621ade0b1491e66cd43b88745`\n    );\n    return response.data;\n  };\n\n  const location = useLocation();\n\n  console.log('location in Movie details:', location);\n\n  // const getConfig = async () => {\n  //   const response = await axios.get(\n  //     `https://api.themoviedb.org/3/configuration?api_key=a3ec7c1621ade0b1491e66cd43b88745`\n  //   );\n  //   return response.data;\n  // };\n\n  useEffect(() => {\n    getMoviesById(movieId).then(setMovie);\n    // getConfig().then(setConf);\n  }, [movieId]);\n\n  return (\n    <MovieWrapper>\n      <h2>Movie details</h2>\n      {/* {console.log('movie:', movie)} */}\n      {/* {console.log('Config:', conf)} */}\n\n      <GoBackBtn to={location?.state?.from ?? '/'}>Go back</GoBackBtn>\n\n      {movie && (\n        <MovieDetails>\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n            alt={movie.title}\n          />\n          <div>\n            <MovieTitle>{movie.title}</MovieTitle>\n            <p>User score: {movie.vote_average * 10}%</p>\n\n            <DetailName>Overview</DetailName>\n            <p>{movie.overview}</p>\n\n            <DetailName>Genres</DetailName>\n            <p>\n              {movie.genres.map(genre => (\n                <span key={genre.id}>{genre.name} </span>\n              ))}\n            </p>\n\n            <DetailName>Release date</DetailName>\n            <p>{movie.release_date}</p>\n          </div>\n        </MovieDetails>\n      )}\n\n      <AdditionalInfoList>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            {/* передаём в линки state со старым адресом для кнопки Go back */}\n            <LinkItem to=\"cast\" state={{ from: location?.state?.from ?? '/' }}>\n              Cast\n            </LinkItem>\n          </li>\n          <li>\n            <LinkItem\n              to=\"reviews\"\n              state={{ from: location?.state?.from ?? '/' }}\n            >\n              Reviews\n            </LinkItem>\n          </li>\n        </ul>\n      </AdditionalInfoList>\n\n      <Outlet />\n    </MovieWrapper>\n  );\n}\n"],"names":["MovieWrapper","styled","GoBackBtn","Link","MovieDetails","MovieTitle","DetailName","AdditionalInfoList","LinkItem","NavLink","MovieDetailsPage","movieId","useParams","useState","movie","setMovie","getMoviesById","axios","response","data","location","useLocation","console","log","useEffect","then","to","state","from","src","poster_path","alt","title","vote_average","overview","genres","map","genre","name","id","release_date"],"sourceRoot":""}